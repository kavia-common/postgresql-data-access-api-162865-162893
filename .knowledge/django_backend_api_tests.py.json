{"is_source_file": true, "format": "Python", "description": "This file contains unit tests for a Django REST Framework API, testing health check endpoint and a record listing endpoint with setup of test data.", "external_files": ["rest_framework.test", "django.urls", ".models"], "external_methods": ["reverse", "Record.objects.create"], "published": [], "classes": [{"name": "HealthTests", "description": "Test case for health check endpoint."}, {"name": "RecordsAPITests", "description": "Test case for the records listing API, including setup with sample data."}], "methods": [{"name": "test_health(self)", "description": "Tests that the health endpoint returns status code 200 and message indicating server is up.", "scope": "HealthTests", "scopeKind": "class"}, {"name": "setUp(self)", "description": "Initializes the test database with sample Record entries for testing the listing endpoint.", "scope": "RecordsAPITests", "scopeKind": "class"}, {"name": "test_list_records_returns_all_rows(self)", "description": "Tests that the records listing API returns all seeded records with correct data and status.", "scope": "RecordsAPITests", "scopeKind": "class"}], "calls": ["reverse('Health')", "self.client.get(url)", "self.assertEqual(response.status_code, 200)", "self.assertEqual(response.data, {\"message\": \"Server is up!\"})", "Record.objects.create(name=\"alpha\", value=1)", "Record.objects.create(name=\"beta\", value=2)", "Record.objects.create(name=\"gamma\", value=3)", "reverse('RecordsList')", "len(response.data)", "r['name'] for r in response.data", "r['value'] for r in response.data", "sorted(names)", "sorted(values)", "self.assertListEqual", "self.assertIsInstance"], "search-terms": ["APITestCase", "Health", "RecordsList", "django.urls", "models", "test_health", "test_list_records_returns_all_rows"], "state": 2, "file_id": 17, "knowledge_revision": 49, "git_revision": "42870828737a51a69d97cc4392ab88f401498dcd", "revision_history": [{"37": "85b16ae556b4eb32ef5e09d1c2a439d70ffba847"}, {"49": "42870828737a51a69d97cc4392ab88f401498dcd"}], "ctags": [{"_type": "tag", "name": "HealthTests", "path": "/home/kavia/workspace/code-generation/postgresql-data-access-api-162865-162893/django_backend/api/tests.py", "pattern": "/^class HealthTests(APITestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "RecordsAPITests", "path": "/home/kavia/workspace/code-generation/postgresql-data-access-api-162865-162893/django_backend/api/tests.py", "pattern": "/^class RecordsAPITests(APITestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "setUp", "path": "/home/kavia/workspace/code-generation/postgresql-data-access-api-162865-162893/django_backend/api/tests.py", "pattern": "/^    def setUp(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RecordsAPITests", "scopeKind": "class"}, {"_type": "tag", "name": "test_health", "path": "/home/kavia/workspace/code-generation/postgresql-data-access-api-162865-162893/django_backend/api/tests.py", "pattern": "/^    def test_health(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "HealthTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_list_records_returns_all_rows", "path": "/home/kavia/workspace/code-generation/postgresql-data-access-api-162865-162893/django_backend/api/tests.py", "pattern": "/^    def test_list_records_returns_all_rows(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RecordsAPITests", "scopeKind": "class"}], "hash": "b2cf7ab074457620c2b3c30cd78ddb99", "format-version": 4, "code-base-name": "django_backend", "filename": "django_backend/api/tests.py"}